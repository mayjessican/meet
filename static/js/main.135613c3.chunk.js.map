{"version":3,"sources":["mock-data.js","api.js","CitySearch.js","Event.js","EventList.js","NumberOfEvents.js","App.js","serviceWorker.js","index.js"],"names":["mockData","removeQuery","window","history","pushState","location","pathname","newurl","protocol","host","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","extractLocations","events","map","event","Set","getEvents","NProgress","start","href","startsWith","done","locations","getAccessToken","token","url","axios","get","data","localStorage","setItem","JSON","stringify","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","code","results","authUrl","getToken","encodeCode","encodeURIComponent","access_token","CitySearch","state","props","query","suggestions","showSuggestions","handleInputChanged","setState","value","target","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","className","type","this","onChange","key","onClick","Component","Event","showDetails","onDetailsButtonClicked","prevState","dateTime","end","summary","description","htmlLink","EventList","id","NumberOfEvents","numberOfEvents","eventCount","console","log","App","currentLocation","response","slice","mounted","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.135613c3.chunk.js","sourcesContent":["\r\nconst mockData = [\r\n    {\r\n     \"kind\": \"calendar#event\",\r\n     \"etag\": \"\\\"3181161784712000\\\"\",\r\n     \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n     \"status\": \"confirmed\",\r\n     \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n     \"created\": \"2020-05-19T19:17:46.000Z\",\r\n     \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n     \"summary\": \"Learn JavaScript\",\r\n     \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in Berlin? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n     \"location\": \"Berlin, Germany\",\r\n     \"creator\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n     },\r\n     \"organizer\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n     },\r\n     \"start\": {\r\n      \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n     },\r\n     \"end\": {\r\n      \"dateTime\": \"2020-05-19T17:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n     },\r\n     \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n     \"originalStartTime\": {\r\n      \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n     },\r\n     \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n     \"sequence\": 0,\r\n     \"reminders\": {\r\n      \"useDefault\": true\r\n     }\r\n    },\r\n    {\r\n     \"kind\": \"calendar#event\",\r\n     \"etag\": \"\\\"3181159875584000\\\"\",\r\n     \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\r\n     \"status\": \"confirmed\",\r\n     \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n     \"created\": \"2020-05-19T19:14:30.000Z\",\r\n     \"updated\": \"2020-05-27T11:45:37.792Z\",\r\n     \"summary\": \"React is Fun\",\r\n     \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n     \"location\": \"London, UK\",\r\n     \"creator\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n     },\r\n     \"organizer\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n     },\r\n     \"start\": {\r\n      \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n      \"timeZone\": \"Europe/London\"\r\n     },\r\n     \"end\": {\r\n      \"dateTime\": \"2020-05-20T15:00:00+02:00\",\r\n      \"timeZone\": \"Europe/London\"\r\n     },\r\n     \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n     \"originalStartTime\": {\r\n      \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n      \"timeZone\": \"Europe/London\"\r\n     },\r\n     \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n     \"sequence\": 0,\r\n     \"reminders\": {\r\n      \"useDefault\": true\r\n     },\r\n    },\r\n];\r\n\r\nexport { mockData };\r\n\r\n","import { mockData } from \"./mock-data\";\r\nimport axios from \"axios\";\r\nimport NProgress from \"nprogress\";\r\n\r\n/**\r\n *\r\n * @param {*} events:\r\n * The following function should be in the “api.js” file.\r\n * This function takes an events array, then uses map to create a new array with only locations.\r\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\r\n * The Set will remove all duplicates from the array.\r\n */\r\n\r\nconst removeQuery = () => {\r\n  if (window.history.pushState && window.location.pathname) {\r\n    var newurl =\r\n      window.location.protocol +\r\n      \"//\" +\r\n      window.location.host +\r\n      window.location.pathname;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  } else {\r\n    newurl = window.location.protocol + \"//\" + window.location.host;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  }\r\n};\r\n\r\nconst checkToken = async (accessToken) => {\r\n  const result = await fetch(\r\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n  )\r\n    .then((res) => res.json())\r\n    .catch((error) => error.json());\r\n\r\n  return result;\r\n};\r\n\r\nconst extractLocations = (events) => {\r\n  var extractLocations = events.map((event) => event.location);\r\n  var locations = [...new Set(extractLocations)];\r\n  return locations;\r\n};\r\n\r\nconst getEvents = async () => {\r\n  NProgress.start();\r\n  if (window.location.href.startsWith(\"http://localhost\")) {\r\n    NProgress.done();\r\n    return { events: mockData, locations: extractLocations(mockData) };\r\n  }\r\n\r\n  const token = await getAccessToken();\r\n  if (token) {\r\n    removeQuery();\r\n    const url = `https://qxi4otm9a6.execute-api.eu-central-1.amazonaws.com/dev/api/get-events//${token}`;\r\n    const result = await axios.get(url);\r\n    if (result.data) {\r\n      var locations = extractLocations(result.data.events);\r\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n    }\r\n    NProgress.done();\r\n    return { events: result.data.events, locations };\r\n  }\r\n};\r\n\r\nconst getAccessToken = async () => {\r\n  const accessToken = await localStorage.getItem(\"access_token\");\r\n  const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n  if (!accessToken || tokenCheck.error) {\r\n    await localStorage.removeItem(\"access_token\");\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = await searchParams.get(\"code\");\r\n    if (!code) {\r\n      const results = await axios.get(\r\n        \"https://qxi4otm9a6.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\r\n      );\r\n      const { authUrl } = results.data;\r\n      return (window.location.href = authUrl);\r\n    }\r\n    return code && getToken(code);\r\n  }\r\n  return accessToken;\r\n};\r\n\r\nconst getToken = async (code) => {\r\n  removeQuery ();\r\n  const encodeCode = encodeURIComponent(code);\r\n  const { access_token } = await fetch(\r\n    `https://qxi4otm9a6.execute-api.eu-central-1.amazonaws.com/dev/api/get-events/${encodeCode}`\r\n  )\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((error) => error);\r\n\r\n  access_token && localStorage.setItem(\"access_token\", access_token);\r\n\r\n  return access_token;\r\n};\r\n\r\nexport { getEvents, getAccessToken, extractLocations, getToken, checkToken };","import React, { Component } from \"react\";\r\nimport { mockData } from \"./mock-data\";\r\nimport { extractLocations } from \"./api\";\r\n\r\nclass CitySearch extends Component {\r\n  state = {\r\n    //locations: extractLocations(mockData),\r\n    locations: this.props.locations,\r\n    query: \"Berlin, Germany\",\r\n    suggestions: [],\r\n    showSuggestions: false,\r\n  };\r\n\r\n  handleInputChanged = (event) => {\r\n    this.setState({ showSuggestions: true });\r\n    const value = event.target.value;\r\n    const suggestions = this.props.locations.filter((location) => {\r\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    });\r\n\r\n    return this.setState({\r\n      query: value,\r\n      suggestions,\r\n    });\r\n  };\r\n\r\n  handleItemClicked = (suggestion) => {\r\n    this.setState({\r\n      query: suggestion,\r\n      suggestions: [],\r\n      showSuggestions: false,\r\n    });\r\n    this.props.updateEvents(suggestion);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"CitySearch\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"city\"\r\n          value={this.state.query}\r\n          onChange={this.handleInputChanged}\r\n        />\r\n        <ul className={\r\n            this.state.showSuggestions ? \"suggestions showSuggestions\" : \"display-none\"\r\n          }>\r\n          {this.state.suggestions.map((suggestion) => (\r\n            <li\r\n              key={suggestion}\r\n              onClick={() => this.handleItemClicked(suggestion)}\r\n            >\r\n              {suggestion}\r\n            </li>\r\n          ))}\r\n          <li onClick={() => this.handleItemClicked(\"all\")}>\r\n            <b>See all cities</b>\r\n          </li>\r\n          ;\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CitySearch;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Event extends Component {\r\n  state = {\r\n    showDetails: false,\r\n  };\r\n\r\n  onDetailsButtonClicked = () => {\r\n    this.setState((prevState) => ({\r\n      showDetails: !prevState.showDetails,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const event = this.props.event;\r\n    // Problem is here. If you name if event you should find the class event, if you name it Event, then use class Event.\r\n    // You can not expect to find class Event if you set it to be event.\r\n    return (\r\n      <div className=\"event\">\r\n        <p className=\"time\">\r\n          {event.start.dateTime} - {event.end.dateTime}\r\n        </p>\r\n        <p className=\"summary\">{event.summary}</p>\r\n        {this.state.showDetails && (\r\n          <div className=\"extra\">\r\n            <p className=\"location\">{event.location}</p>\r\n            <p className=\"description\">{event.description}</p>\r\n            <a className=\"htmlLink\" href={event.htmlLink}>\r\n              Event Link\r\n            </a>\r\n          </div>\r\n        )}\r\n        <button className=\"details-btn\" onClick={this.onDetailsButtonClicked}>\r\n          Details\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Event;\r\n","import React, { Component } from \"react\";\r\nimport Event from \"./Event\"; // it's here\r\n\r\nclass EventList extends Component {\r\n  render() {\r\n    return (\r\n      <ul className=\"EventList\">\r\n        {this.props.events.map((event) => (\r\n          <li key={event.id}>\r\n            <Event event={event} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventList;\r\n","import React, { Component } from 'react';\r\n\r\nclass NumberOfEvents extends Component {\r\n\r\n  state = {\r\n    numberOfEvents: 32\r\n  };\r\n\r\n  handleInputChanged = (eventCount) => {\r\n    const value = eventCount.target.value;\r\n    this.setState({ numberOfEvents: value });\r\n    this.props.updateEvents(value);\r\n    console.log(this.props.updateEvents)\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"numberOfEvents\">\r\n        <input\r\n          type=\"text\"\r\n          id=\"numberOfEvents input\"\r\n          value={this.state.numberOfEvents}\r\n          onChange={this.handleInputChanged}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberOfEvents;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport CitySearch from \"./CitySearch\";\nimport EventList from \"./EventList\";\nimport NumberOfEvents from \"./NumberOfEvents\";\nimport { getEvents } from \"./api\";\nimport \"./nprogress.css\";\n\nclass App extends Component {\n  state = {\n    events: [],\n    currentLocation: \"all\",\n    locations: [],\n    numberOfEvents: 32,\n  };\n\n  updateEvents = (location) => {\n    // This update Events receives location param, and use this location param to filter the events below.\n    // Either this location will be 'all', which means we get all events, or some city where we filter the events based on the city\n    // But when I console.log the location, it's empty. Which means it's not passed correctly from where we call it.\n    // And we need to jump to where we call this function. There are 2 places we call this function, one in NumberOfEvents, one in CitySearch\n    // There is another place: in the test App.test.js\n    // Need a bit of time to figure it out, but you understood or not?So far yes, not 100% but I'm getting it and think I need to play around a bit more nice! you can continue thank you! welcome!\n    //const { numberOfEvents } = this.state;\n    if (location) {\n    getEvents().then((response) => {\n      const locationEvents =\n        location === \"all\"\n          ? response.events\n          : response.events.filter((event) => event.location === location);\n      const events = locationEvents.slice(0, this.state.numberOfEvents);\n      return this.setState({\n        events: events,\n        currentLocation: location,\n      });\n    });\n  }\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((response) => {\n      if(this.mounted) {\n      this.setState({ events: response.events, locations: response.locations });\n      }\n    });\n  }\n\n  componentWillUnmount(){\n    this.mounted = false;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch updateEvents={this.updateEvents} locations={this.state.locations} />\n        <EventList events={this.state.events} />\n        <NumberOfEvents updateEvents={this.updateEvents} locations={this.state.locations}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}